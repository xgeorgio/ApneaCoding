
C
C ... SOSUS VER.1: LINEAR GEODESICS ...
C
      PROGRAM SOSUS1L

      INTEGER NDIM, ERR
      DOUBLE PRECISION A(2,2), B(2), X(2)
      DOUBLE PRECISION LAT(3), LON(3), TM(3), SPD

C
C ... DEFINE MODEL CONFIGURATION ...
C
C SPEED OF SOUND IN WATER, ROUGHLY IN DEG/SEC
C IN SOFAR CHANNEL (DEPTH > 3KM) SPEED IS 1.48-1.52 KM/SEC
C NOTE: 1.50 (KM/SEC) -> /(2*PI*ER)*360 (DEG/SEC)
      DATA SPD /0.013497357/

C
C ... TEST SET: LOCATIONS OF 3 DETECTION STATIONS ...
C
C STATIONS (ATLANTIC OCEAN): NOVA SCOTIA, BERMUDA, NORFOLK
C NOTE: LON IS USED +90 DEG TO CONVERT TO POSITIVE VALUES
      DATA LAT /44.351786, 32.452274, 36.760210/
      DATA LON /26.420016, 25.036205, 14.219518/
C TEST SET: DETECTION TIME (SEC) AT 3 STATIONS ...
C CONFIG 1: EQUI-DISTANCE CHECK (38.9120,21.3427)
C     DATA TM  /551.301, 551.301, 551.301/
C CONFIG 2: PERTUBATED CHECK (38.9500,21.4000)
      DATA TM /546.350, 551.661, 556.180/

C INITIALIZE SOLUTION VECTOR ...
      DATA X /0.0,0.0/


C 
C ... MAIN PROGRAM ...
C
      WRITE(*,*) 'SOSUS VER.1: LINEAR GEODESICS'
      WRITE(*,*) ' '

C CONSTRUCT THE GEODESIC 2x2 SYSTEM OF DETECTIONS
      A(1,1) = 2*LON(2)/(SPD*TM(2)) - 2*LON(1)/(SPD*TM(1))
      A(1,2) = 2*LAT(2)/(SPD*TM(2)) - 2*LAT(1)/(SPD*TM(1))
      B(1) =  SPD*(TM(2)-TM(1)) - (LON(2)**2 + LAT(2)**2)/(SPD*TM(2)) +
     *(LON(1)**2 + LAT(1)**2)/(SPD*TM(1))
C NOTE: OPEN PARENTHESIS ABOVE FOR SIGN CORRECTION GIVE SYNTAX ERROR
      B(1)=-B(1)
      
      A(2,1) = 2*LON(3)/(SPD*TM(3)) - 2*LON(1)/(SPD*TM(1))
      A(2,2) = 2*LAT(3)/(SPD*TM(3)) - 2*LAT(1)/(SPD*TM(1))
      B(2) =  SPD*(TM(3)-TM(1)) - (LON(3)**2 + LAT(3)**2)/(SPD*TM(3)) +
     *(LON(1)**2 + LAT(1)**2)/(SPD*TM(1))
C NOTE: OPEN PARENTHESIS ABOVE FOR SIGN CORRECTION GIVE SYNTAX ERROR
      B(2)=-B(2)

C DISPLAY DETECTION STATIONS DATA ...
      WRITE(*,*) '--- DETECTION STATIONS:'
   4  FORMAT(1X,'LAT=',F10.6,' , LON=',F10.6,' => DELTA=',F10.3)
      WRITE(*,4) LAT(1), LON(1)-90.0, TM(1)
      WRITE(*,4) LAT(2), LON(2)-90.0, TM(2)
      WRITE(*,4) LAT(3), LON(3)-90.0, TM(3)

C DISPLAY CURRENT LINEAR SYSTEM TO SOLVE ...
      WRITE(*,*) '--- GEODESIC LINEAR 2x2 SYSTEM:'
   5  FORMAT(1X,F10.3,'*LON? +',F10.3,'*LAT? =',F10.3)
      WRITE(*,5) A(1,1), A(1,2), B(1)
      WRITE(*,5) A(2,1), A(2,2), B(2)

C SOLVE THE 2x2 LINEAR SYSTEM ...
      ERR = SOLVE2(A,B,X)      
  10  WRITE(*,*) '----------'
  11  FORMAT(1X,'TARGET SOLUTION (CODE=',I1,'):')
      WRITE(*,11) ERR
  15  FORMAT(5X,'LAT = ',F11.6,' , LON = ',F11.6)
      WRITE(*,15) X(2), X(1)-90

      STOP
      END


C
C ... DETERMINANT-BASED 2x2 LINEAR SYSTEM SOLVER ...
C
C NOTE: DETERMINANT-BASED SOLUTION FOR LARGER LINEAR SYSTEMS IS SLOW
C BUT IN THIS CASE FOR 2x2 IS FINE, PLUS NON-ITERATIVE ALGORITHM
C ENABLES THE COMPILER TO DO MORE AGGRESSIVE SPEED OPTIMIZATIONS
C
      FUNCTION SOLVE2( A, B, X )

      DOUBLE PRECISION A(2,2), B(2), X(2), DA
      INTEGER RES

C CHECK THE SYSTEM'S CONDITION ...
      DA = A(1,1)*A(2,2) - A(2,1)*A(1,2)
      IF (DA .EQ. 0.0) GOTO 82
C SYSTEM IS FULL RANK, CALCULATE SOLUTIONS ...
  80  X(1) = ( B(1)*A(2,2) - B(2)*A(1,2) ) / DA
      X(2) = ( A(1,1)*B(2) - A(2,1)*B(1) ) / DA
      RES = 0
      GOTO 85
C SYSTEM IS ILL-DEFINED, REPORT ERROR ...
  82  RES = 1

  85  SOLVE2 = RES

      RETURN
      END
